1.Implementing Uniq on xv6 as user program and also as system call Task-1 - User space Similar to HW0 (hello.c), create uniq.c that performs the above task by replicat- ing the functionality of uniq. This program should display/print the following message ” Uniq command is getting executed in user mode, ” followed by content. In the above case, you will get the following output $uniq OS611 example.txt ”Uniq command is getting executed in user mode.” • I understand the Operating system. • IlovetoworkonOS. • Thanks xv6. Task-2 - Kernel space Similar to HW0, create a system call named uniq. This should display/print the following message ” Uniq command is getting executed in kernel mode”, then followed by content.
2. Implementing head on xv6 as user program and also as system call Task-1 - User space Similar to HW0 (hello.c), create head.c that performs the above task by replicating the functionality of the head. This program should display/print the following message: ” Head command is getting executed in user mode, ” followed by content. Task-2 - Kernel space Similar to HW0, create a system call named head. This should display/print the following message: ”Head command is getting executed in kernel mode”, then followed by content.
